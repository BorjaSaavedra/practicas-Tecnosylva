//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : GestorCapas
	/// Data Source    : (localdb)\MSSQLLocalDB
	/// Server Version : 15.00.4153
	/// </summary>
	public partial class GestorCapasDB : LinqToDB.Data.DataConnection
	{
		public ITable<Capa>        Capas        { get { return this.GetTable<Capa>(); } }
		public ITable<Role>        Roles        { get { return this.GetTable<Role>(); } }
		public ITable<Usuario>     Usuarios     { get { return this.GetTable<Usuario>(); } }
		public ITable<UsuarioCapa> UsuarioCapas { get { return this.GetTable<UsuarioCapa>(); } }

		public GestorCapasDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public GestorCapasDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public GestorCapasDB(LinqToDBConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public GestorCapasDB(LinqToDBConnectionOptions<GestorCapasDB> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="Capas")]
	public partial class Capa
	{
		[Column("idCapa"),           PrimaryKey, NotNull] public Guid   IdCapa           { get; set; } // uniqueidentifier
		[Column("idUsuarioCreador"),             NotNull] public Guid   IdUsuarioCreador { get; set; } // uniqueidentifier
		[Column("urlCapa"),                      NotNull] public string UrlCapa          { get; set; } // nvarchar(150)

		#region Associations

		/// <summary>
		/// FK_Capas_Id_BackReference (dbo.UsuarioCapa)
		/// </summary>
		[Association(ThisKey="IdCapa", OtherKey="IdCapa", CanBeNull=true)]
		public IEnumerable<UsuarioCapa> Ids { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Roles")]
	public partial class Role
	{
		[Column("idRol"), PrimaryKey, NotNull] public Guid   IdRol { get; set; } // uniqueidentifier
		[Column("nivel"),             NotNull] public string Nivel { get; set; } // nvarchar(150)

		#region Associations

		/// <summary>
		/// FK_Usuarios_Rol_BackReference (dbo.Usuarios)
		/// </summary>
		[Association(ThisKey="IdRol", OtherKey="IdRol", CanBeNull=true)]
		public IEnumerable<Usuario> UsuariosRols { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Usuarios")]
	public partial class Usuario
	{
		[Column("idUsuario"), PrimaryKey,  NotNull] public Guid   IdUsuario { get; set; } // uniqueidentifier
		[Column("nombre"),                 NotNull] public string Nombre    { get; set; } // nvarchar(50)
		[Column("apellido1"),              NotNull] public string Apellido1 { get; set; } // nvarchar(50)
		[Column("username"),               NotNull] public string Username  { get; set; } // nvarchar(50)
		[Column("email"),                  NotNull] public string Email     { get; set; } // nvarchar(50)
		[Column("password"),               NotNull] public string Password  { get; set; } // nvarchar(150)
		[Column("borrado"),      Nullable         ] public bool?  Borrado   { get; set; } // bit
		[Column("idRol"),        Nullable         ] public Guid?  IdRol     { get; set; } // uniqueidentifier

		#region Associations

		/// <summary>
		/// FK_Usuarios_Id_BackReference (dbo.UsuarioCapa)
		/// </summary>
		[Association(ThisKey="IdUsuario", OtherKey="IdUsuario", CanBeNull=true)]
		public IEnumerable<UsuarioCapa> Ids { get; set; }

		/// <summary>
		/// FK_Usuarios_Rol (dbo.Roles)
		/// </summary>
		[Association(ThisKey="IdRol", OtherKey="IdRol", CanBeNull=true)]
		public Role Rol { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="UsuarioCapa")]
	public partial class UsuarioCapa
	{
		[Column("idUsuario"), PrimaryKey(1), NotNull] public Guid IdUsuario { get; set; } // uniqueidentifier
		[Column("idCapa"),    PrimaryKey(2), NotNull] public Guid IdCapa    { get; set; } // uniqueidentifier

		#region Associations

		/// <summary>
		/// FK_Capas_Id (dbo.Capas)
		/// </summary>
		[Association(ThisKey="IdCapa", OtherKey="IdCapa", CanBeNull=false)]
		public Capa CapasId { get; set; }

		/// <summary>
		/// FK_Usuarios_Id (dbo.Usuarios)
		/// </summary>
		[Association(ThisKey="IdUsuario", OtherKey="IdUsuario", CanBeNull=false)]
		public Usuario UsuariosId { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Capa Find(this ITable<Capa> table, Guid IdCapa)
		{
			return table.FirstOrDefault(t =>
				t.IdCapa == IdCapa);
		}

		public static Role Find(this ITable<Role> table, Guid IdRol)
		{
			return table.FirstOrDefault(t =>
				t.IdRol == IdRol);
		}

		public static Usuario Find(this ITable<Usuario> table, Guid IdUsuario)
		{
			return table.FirstOrDefault(t =>
				t.IdUsuario == IdUsuario);
		}

		public static UsuarioCapa Find(this ITable<UsuarioCapa> table, Guid IdUsuario, Guid IdCapa)
		{
			return table.FirstOrDefault(t =>
				t.IdUsuario == IdUsuario &&
				t.IdCapa    == IdCapa);
		}
	}
}
